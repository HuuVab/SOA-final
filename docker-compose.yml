version: '3.8'

services:
  redis:
    image: redis:7.0-alpine
    container_name: ecommerce-redis
    ports:
      - "6379:6379"
    networks:
      - ecommerce-network
    restart: unless-stopped

  # User Authentication Service
  customer-service:
    build: ./customer-service
    container_name: ecommerce-customer-service
    restart: always
    ports:
      - "5000:5000"
    environment:
      - DB_SERVICE_URL=http://database-service:5003/api
      - JWT_SECRET=${JWT_SECRET:-your-secret-key}
      - JWT_EXPIRATION=86400
      - FLASK_DEBUG=false
      - PORT=5000
      - EMAIL_SERVICE_URL=http://email-service:5002
      - EMAIL_SERVICE_API_KEY=${EMAIL_SERVICE_API_KEY:-email_service_api_key}
      - AUTH_SERVICE_BASE_URL=${AUTH_SERVICE_BASE_URL:-http://localhost:5000}
      - DB_NAME=/data/customer.sqlite
    volumes:
      - ./customer-service:/app
    networks:
      - ecommerce-network
    command: flask run --host=0.0.0.0 --port=5000
    depends_on:
      - database-service

  email-service:
    build:
      context: ./email-service
      dockerfile: Dockerfile
    container_name: ecommerce-email-service
    environment:
      - ENGAGELAB_API_KEY=JGmLrgS5DNiO_test_TlGySK
      - MAIL_SERVER=${MAIL_SERVER:-smtp.gmail.com}
      - MAIL_PORT=${MAIL_PORT:-587}
      - MAIL_USE_TLS=${MAIL_USE_TLS:-True}
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - MAIL_DEFAULT_SENDER=${MAIL_DEFAULT_SENDER}
      - EMAIL_SERVICE_API_KEY=${EMAIL_SERVICE_API_KEY:-email_service_api_key}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - SECRET_KEY=${EMAIL_SERVICE_SECRET_KEY:-email_service_secret}
      - PORT=5002
    ports:
      - "5002:5002"
    volumes:
      - ./email-service:/app
    depends_on:
      - redis
    networks:
      - ecommerce-network
    restart: unless-stopped
    command: flask run --host=0.0.0.0 --port=5002

  # Database Management Service
  database-service:
    build: ./database-service
    container_name: ecommerce-database-service
    ports:
      - "5003:5003"
    environment:
      - DB_NAME=/data/customer.sqlite
      - PORT=5003
    volumes:
      - ./data:/data
    networks:
      - ecommerce-network
    restart: unless-stopped
  # Add this to your existing docker-compose.yml file
  homepage-service:
    build: ./homepage-service
    container_name: ecommerce-homepage-service
    restart: always
    ports:
      - "5004:5004"
    environment:
      - PORT=5004
      - DB_SERVICE_URL=http://database-service:5003/api
      - CUSTOMER_SERVICE_URL=http://customer-service:5000
    volumes:
      - ./homepage-service:/app
    networks:
      - ecommerce-network
    depends_on:
      - database-service
      - customer-service
  storage-service:
    build: ./storage-service
    container_name: ecommerce-storage-service
    restart: always
    ports:
      - "5005:5005"
    environment:
      - PORT=5005
      - DB_SERVICE_URL=http://database-service:5003/api
      - DB_NAME=/data/storage.sqlite
      - FLASK_DEBUG=false
    volumes:
      - ./storage-service:/app
    networks:
      - ecommerce-network
    depends_on:
      - database-service
  # Promotion Service
  promotion-service:
    build: ./promotion-service
    container_name: ecommerce-promotion-service
    restart: always
    ports:
      - "5006:5006"
    environment:
      - PORT=5006
      - DB_SERVICE_URL=http://database-service:5003/api
      - DB_NAME=/data/promotion.sqlite
      - STORAGE_DB_NAME=/data/storage.sqlite
      - FLASK_DEBUG=false
    volumes:
      - ./promotion-service:/app
    networks:
      - ecommerce-network
    depends_on:
      - database-service
      - storage-service

  # Media Service
  media-service:
    build: ./media-service
    container_name: ecommerce-media-service
    restart: always
    ports:
      - "5007:5007"
    environment:
      - PORT=5007
      - DB_SERVICE_URL=http://database-service:5003/api
      - DB_NAME=/data/media.sqlite
      - MEDIA_DB_NAME=/data/media.sqlite
      - FLASK_DEBUG=false
    volumes:
      - ./media-service:/app
      - ./media:/media
    networks:
      - ecommerce-network
    depends_on:
      - database-service

  # Cart Service
  cart-service:
    build: ./cart-service
    container_name: ecommerce-cart-service
    restart: always
    ports:
      - "5008:5008"  # Using port 5008 to avoid conflict with media-service
    environment:
      - PORT=5008
      - DB_SERVICE_URL=http://database-service:5003/api
      - CUSTOMER_SERVICE_URL=http://customer-service:5000/api
      - PRODUCT_SERVICE_URL=http://storage-service:5005/api
      - PROMOTION_SERVICE_URL=http://promotion-service:5006/api
      - DB_NAME=/data/cart.sqlite  # Add this explicit database name
      - FLASK_DEBUG=false
    volumes:
      - ./cart-service:/app
      - ./data:/data  # Add this volume mapping to access the shared data directory
    networks:
      - ecommerce-network
    depends_on:
      - database-service
      - customer-service
      - storage-service
      - promotion-service
networks:
  ecommerce-network:
    driver: bridge